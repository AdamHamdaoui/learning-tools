---
- hosts: "all"
  become: "yes"
  remote_user: "vagrant"

  tasks:
  - name: Install prerequisite packages
    apt:
      pkg: "{{ item }}"
      state: "latest"
      update_cache: "yes"
      cache_valid_time: "3600"
    with_items:
      - "unzip"
      - "python-pip"
      - "libssl-dev"
      - "libcap-ng-dev"
      - "git"
      - "libtool"
      - "autoconf"
    tags:
      - consul
      - packages
      - ovn

  - name: Create consul group
    group:
      name: "consul"
      state: "present"
    tags:
      - consul

  - name: Create user for Consul
    user:
      name: "consul"
      group: "consul"
      comment: "Consul daemon user"
      shell: "/usr/sbin/nologin"
      state: "present"
      home: "/var/consul"
      system: "yes"
      createhome: "no"
    tags:
      - consul

  - name: Create Consul data and configuration directories
    file:
      path: "{{ item }}"
      state: "directory"
      owner: "consul"
      group: "consul"
    with_items:
      - "/var/consul"
      - "/etc/consul.d/server"
    tags:
      - consul

  - name: Download Consul package
    get_url:
      url: "https://releases.hashicorp.com/consul/0.7.0/consul_0.7.0_linux_amd64.zip"
      dest: "/tmp/consul_0.7.0_linux_amd64.zip"
    tags:
      - consul

  - name: Unzip downloaded Consul file
    unarchive:
      copy: "no"
      src: "/tmp/consul_0.7.0_linux_amd64.zip"
      dest: "/usr/local/bin/"
      creates: "/usr/local/bin/consul"
    tags:
      - consul

  - name: Install Upstart script for Consul
    copy:
      src: "consul.conf"
      dest: "/etc/init/consul.conf"
      owner: "root"
      group: "root"
      mode: "0644"
    tags:
      - consul

  - name: Install Consul configuration file
    template:
      src: "config.json.j2"
      dest: "/etc/consul.d/server/config.json"
      owner: "consul"
      group: "consul"
      mode: "0644"
    tags:
      - consul

  - name: Start Consul service
    service:
      name: "consul"
      state: "started"
    tags:
      - consul

  - name: Add Docker APT repository key
    apt_key:
      keyserver: p80.pool.sks-keyservers.net
      id: 58118E89F3A912897C070ADBF76221572C52609D
      state: "present"
    tags:
      - docker
      - apt-cfg

  - name: Add Docker APT repository (Trusty)
    apt_repository:
      repo: "deb https://apt.dockerproject.org/repo ubuntu-trusty main"
      state: "present"
    when: ansible_distribution_release == "trusty"
    tags:
      - docker
      - apt-cfg

  - name: Add Docker APT repository (Precise)
    apt_repository:
      repo: "deb https://apt.dockerproject.org/repo ubuntu-precise main"
      state: "present"
    when: ansible_distribution_release == "precise"
    tags:
      - docker
      - apt-cfg

  - name: Install Docker packages
    apt:
      name: "{{ item }}"
      state: "present"
      update_cache: "yes"
      cache_valid_time: "3600"
    with_items:
      - "docker-engine=1.11.2-0~trusty"
    tags:
      - docker
      - packages

  - name: Customize Docker daemon configuration
    lineinfile:
      dest: "/etc/default/docker"
      insertafter: '#DOCKER_OPTS="--dns 8.8.8.8 --dns 8.8.4.4"'
      line: "DOCKER_OPTS='-H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock --cluster-store=consul://127.0.0.1:8500 --cluster-advertise={{ ansible_eth1.ipv4.address }}:0'"
      owner: "root"
      group: "root"
      mode: "0644"
    tags:
      - docker
      - docker-cfg

  - name: Restart Docker daemon
    service:
      name: "docker"
      state: "restarted"
    tags:
      - docker
      - docker-cfg

  - name: Set Vagrant user to member of Docker group
    user:
      name: "vagrant"
      groups: "docker"
      append: "yes"
    tags:
      - docker
      - docker-cfg

  - name: Install Python flask module
    pip:
      name: "Flask"
    tags:
      - docker
      - ovn

  - name: Clone OVS repository
    become: "no"
    git:
      repo: "https://github.com/openvswitch/ovs.git"
      dest: "~/ovs"
      update: "no"
    tags:
      - ovn
